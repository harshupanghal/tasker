@using Tasker.Web.Services
@inject NavigationManager Navigation
@inject UserSessionService Session

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">Tasker</a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                @if (Session.IsLoggedIn)
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/tasks">My Tasks</a>
                    </li>
                }
            </ul>

            <ul class="navbar-nav">
                @if (!Session.IsLoggedIn)
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/login">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/register">Register</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <span class="nav-link">Hello, @Session.Username!</span>
                    </li>
                    <li class="nav-item">
                        <button class="btn btn-outline-danger" @onclick="Logout">Logout</button>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

@code {
    private async void  Logout()
    {
       await Session.ClearAsync();
        Navigation.NavigateTo("/login", forceLoad: true);
    }
}
